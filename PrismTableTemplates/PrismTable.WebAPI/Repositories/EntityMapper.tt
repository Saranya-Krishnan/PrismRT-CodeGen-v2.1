<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ include file="..\..\CommonTableTemplate\CommonTableTemplate.tt"#>
<#
    string EntityName = "Entity";
    string EntityNamePlural = "Entities";
    string EntityTablename = "Entity";
    
    Table table = database.Tables[EntityTablename];
    table.Refresh();
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using <#= WebAPIModelsNamespace #>;
using EDM = <#= EntityDataModelNamespace #>;

namespace <#= WebAPIRepositoriesNamespace #>
{
    public class <#= EntityName #>Mapper
    {
        #region Map EntityDataModel to Model

        public static IEnumerable<<#= EntityName #>> MapAllEDMtoDM(IEnumerable<EDM.<#= EntityName #>> edm<#= EntityNamePlural #>) {
            List<<#= EntityName #>> m<#= EntityNamePlural #> = new List<<#= EntityName #>>();

            foreach (EDM.<#= EntityName #> edm<#= EntityName #> in edm<#= EntityNamePlural #>) {
                m<#= EntityNamePlural #>.Add(<#= EntityName #>Mapper.MapOneEDMtoDM(edm<#= EntityName #>));
            }

            return m<#= EntityNamePlural #>;
        }

        public static <#= EntityName #> MapOneEDMtoDM(EDM.<#= EntityName #> edm<#= EntityName #>) {
            <#= EntityName #> m<#= EntityName #> = new <#= EntityName #>();

<#
PushIndent("\t\t\t");
foreach (Column column in table.Columns)
{
        WriteLine(string.Format(@"m{0}.{1} = edm{2}.{3}{4};", EntityName, column.Name, EntityName, column.Name, SqlTypeToString(column.DataType.ToString(), column.Name)));
}  
PopIndent();
#>

            return m<#= EntityName #>;
        }
        
        #endregion

        #region Map Model to EntityDataModel

        public static EDM.<#= EntityName #> MapOneDMtoEDM(<#= EntityName #> m<#= EntityName #>) {
            EDM.<#= EntityName #> edm<#= EntityName #> = new EDM.<#= EntityName #>();

<#
PushIndent("\t\t\t");
foreach (Column column in table.Columns)
{
    WriteLine(string.Format(@"edm{0}.{1} = {2};", EntityName, column.Name, SqlTypeParsedToString(column.DataType.ToString(), EntityName, column.Name)));
}  
PopIndent();
#>

            return edm<#= EntityName #>;
        }

        #endregion
    }
}
